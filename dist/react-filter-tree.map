{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 0a66144c5a48d1084957","webpack:///./src/FilterTree.js","webpack:///external \"lodash\"","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./~/react-treeview/lib/react-treeview.js"],"names":[],"mappings":"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","file":"react-filter-tree.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"lodash\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FilterTree\"] = factory(require(\"lodash\"), require(\"react\"));\n\telse\n\t\troot[\"FilterTree\"] = factory(root[\"lodash\"], root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0a66144c5a48d1084957\n **/","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport TreeView from 'react-treeview'\n\nfunction flattenTree (parentNode) {\n  let list = (_.has(parentNode, 'children') && parentNode.children.length > 0) ? parentNode.children : [parentNode]\n\n  let nodes = _.map(list, (node) => {\n    if (!node) return\n\n    if (_.has(node, 'children') && node.children.length > 0) {\n      return [node, ...flattenTree(node)]\n    }\n\n    return node\n  })\n\n  return _.flattenDeep(nodes)\n}\n\nfunction uniq (nodes) {\n  return _.uniq(nodes, node => node.ref)\n}\n\nexport function getParents (node, list = [], firstPass = true) {\n  if (!firstPass) list.push(node)\n\n  if (node.parentNode) {\n    getParents(node.parentNode, list, false)\n  }\n\n  return _.flattenDeep(list)\n}\n\nexport function treesAreEqual (treeA, treeB) {\n  if (!_.isArray(treeA) || !_.isArray(treeB)) throw new Error('both supplied trees must be arrays')\n\n  if (treeA.length !== treeB.length) return false\n\n  return _.every(treeA, (item, index) => {\n    let itemA = treeA[index]\n    let itemB = treeB[index]\n\n    if (!_.isEmpty(item.children)) {\n      return treesAreEqual(itemA.children, itemB.children)\n    } else {\n      return itemA.id === itemB.id\n    }\n  })\n}\n\nexport function getVisibleMatches (tree, text) {\n  if (_.isEmpty(text)) return []\n\n  function contains (name, terms) {\n    let filtered = _.filter(terms, (term) => {\n      return _.isEqual(name, _.lowerCase(term))\n    })\n\n    return !_.isEmpty(filtered)\n  }\n\n  let flat = getFlattenedTree(tree)\n  let matches = _.filter(flat, (node) => {\n    let name = _.lowerCase(node.name)\n\n    if (_.isString(text)) {\n      return name.indexOf(_.lowerCase(text)) > -1\n    } else if (_.isArray(text)) {\n      return text.indexOf(node.name) > -1;\n    }\n  })\n\n  let parents = getParentsForList(matches)\n  let visible = _.union(matches, parents)\n  return uniq(visible)\n}\n\nexport function getParentsForList (list) {\n  let mapped = _.map(list, node => {\n    return getParents(node)\n  })\n\n  let flat = _.flattenDeep(mapped)\n  return flat\n}\n\nexport function getToggledTree (originalTree = [], filterTerm = undefined, matches = undefined) {\n  if (!matches) {\n    matches = getVisibleMatches(originalTree, filterTerm)\n  }\n\n  let tree = _.map(originalTree, (item) => {\n    let node = _.assign({}, item)\n\n    if (!_.isEmpty(filterTerm)) {\n      let nodeMatches = _.filter(matches, match => match.name === node.name)\n      node.visible = !_.isEmpty(nodeMatches)\n    } else { // not looking for matches, show whole tree\n      node.visible = true\n    }\n\n    if (node && !_.isEmpty(node.children)) {\n      node.children = getToggledTree(node.children, filterTerm, matches)\n    }\n\n    return node\n  })\n\n  return tree\n}\n\nexport function getFlattenedTree (tree) {\n  if (!_.isArray(tree)) throw new Error('getFlattenedTree expects the tree to be an array')\n\n  let parentNode = _.first(tree) // TODO this only makes sense because we have one root node (if plain object use it, else array grab first, else throw error)\n  let list = []\n\n  if (_.has(parentNode, 'children')) {\n    let flat = flattenTree(parentNode)\n    list = [parentNode, ...flat]\n  } else {\n    list = tree\n  }\n\n  return list\n}\n\nexport function decorateTree (rawTree, payload) { // so festive\n  let mapped = _.map(rawTree, (node) => {\n    node = (_.isString(node)) ? { name: node } : node\n\n    node = _.assign({}, node, payload, {\n      visible: true,\n      ref: _.random(0, Date.now())\n    })\n\n    if (!_.isEmpty(node.children)) {\n      let updatedPayload = _.assign({}, payload, { parentNode: node }) // we update here because we only want to pass the parent along for the next iteration\n      node.children = decorateTree(node.children, updatedPayload)\n    }\n\n    return node\n  })\n\n  return mapped\n}\n\nexport function getChildrenNodes (node, excludeParentNodes = false) {\n  let children = flattenTree(node)\n\n  if (excludeParentNodes) {\n    _.remove(children, node => !_.isEmpty(node.children)) // mutates the given array\n  }\n\n  return children\n}\n\nclass Tree extends Component {\n  static propTypes = {\n    treeNodes: React.PropTypes.array.isRequired,\n    onSelectionsChange: React.PropTypes.func.isRequired,\n    selectedTerms: React.PropTypes.array.isRequired,\n    hideDeselectAll: React.PropTypes.bool,\n    includeParentNodes: React.PropTypes.bool.isRequired,\n    filterTerm: React.PropTypes.string.isRequired\n  };\n\n  componentDidMount () {\n    let { treeNodes, selectedTerms } = this.props\n    let flat = getFlattenedTree(treeNodes)\n\n    if (flat.length > 0) {\n      let allTerms = _.map(flat, 'name')\n      let terms = (_.isEmpty(selectedTerms)) ? allTerms : selectedTerms\n      this.selectTerms(terms)\n    }\n  }\n\n  componentDidUpdate (prevProps) { // select all by default happens in here\n    let { includeParentNodes, selectedTerms, treeNodes } = this.props\n    let flat = getFlattenedTree(treeNodes)\n\n    if (prevProps.includeParentNodes !== includeParentNodes) { // include parent nodes was toggled, so we manually select those extra terms {\n      let selectedNodes = _.filter(flat, node => _.includes(selectedTerms, node.name))\n      let terms = _.map(selectedNodes, 'name')\n      this.selectTerms(terms)\n    }\n\n    // when the tree changes, we select all terms by default\n    if (prevProps.treeNodes.length !== this.props.treeNodes.length) {\n      let allTerms = _.map(flat, 'name')\n      let terms = (_.isEmpty(selectedTerms)) ? allTerms : selectedTerms\n      this.selectTerms(terms)\n    }\n  }\n\n  shouldComponentUpdate (nextProps) {\n    let flat = { current: [], next: [] }\n    let visibles = _.clone(flat)\n\n    flat.current = getFlattenedTree(this.props.treeNodes)\n    flat.next = getFlattenedTree(nextProps.treeNodes)\n\n    visibles.current = _.filter(flat.current, node => node && node.visible)\n    visibles.next = _.filter(flat.next, node => node && node.visible)\n\n    let newNodes = this.props.treeNodes.length !== nextProps.treeNodes.length\n\n    let currentVisibleNames = _.map(visibles.current, 'name')\n    let nextVisibleNames = _.map(visibles.next, 'name')\n\n    let newVisibles = !_.isEmpty(_.difference(currentVisibleNames, nextVisibleNames)) ||\n      !_.isEmpty(_.difference(nextVisibleNames, currentVisibleNames))\n\n    let newTerms = this.props.selectedTerms.length !== nextProps.selectedTerms.length\n    let leafNodesToggled = this.props.includeParentNodes !== nextProps.includeParentNodes\n\n    let differs = newNodes || newVisibles || newTerms || leafNodesToggled\n\n    return differs\n  }\n\n  selectTerms (selectedTerms) {\n    let { treeNodes, includeParentNodes, onSelectionsChange } = this.props\n\n    let flat = getFlattenedTree(treeNodes)\n    let selectedNodes = _.filter(flat, node => _.includes(selectedTerms, node.name))\n    let parents = _.map(getParentsForList(selectedNodes), 'name')\n    let terms = (includeParentNodes) ? _.union(parents, selectedTerms) : _.without(selectedTerms, ...parents)\n\n    onSelectionsChange(_.uniq(terms))\n  }\n\n  handleLeafClick (node) {\n    let { selectedTerms } = this.props\n\n    let unchecking = _.includes(selectedTerms, node.name)\n    let terms = (unchecking) ? _.difference(selectedTerms, [node.name]) : _.union(selectedTerms, [node.name])\n\n    this.selectTerms(terms)\n  }\n\n  handleParentClick (node) {\n    let { selectedTerms } = this.props\n    let children = _.map(getChildrenNodes(node), 'name')\n\n    // unchecking only if all children are already selected\n    // if some children are selected, we want to treat that as checking the parent\n    let selected = this.areChildrenSelected(node)\n    let terms = (selected.all) ? _.without(selectedTerms, ...children) : _.union(selectedTerms, children)\n\n    this.selectTerms(terms)\n  }\n\n  handleDeselectAll () {\n    this.props.onSelectionsChange([])\n  }\n\n  selectAll () {\n    let flat = getFlattenedTree(this.props.treeNodes)\n    this.props.onSelectionsChange(_.map(flat, 'name'))\n  }\n\n  areChildrenSelected (node) {\n    let { selectedTerms } = this.props\n\n    let children = _.uniq(_.map(getChildrenNodes(node, true), 'name'))\n    let childrenSelected = _.intersection(children, selectedTerms)\n\n    return {\n      all: childrenSelected.length === children.length,\n      some: childrenSelected.length > 0 && childrenSelected.length !== children.length,\n      none: childrenSelected.length === 0\n    }\n  }\n\n  getParentCheckbox (node) {\n    let image = 'images/checkbox-'\n    let selected = this.areChildrenSelected(node)\n\n    if (selected.all) {\n      image += 'checked.png'\n    } else if (selected.some) {\n      image += 'indeterminate.png'\n    } else if (selected.none) {\n      image += 'unchecked.png'\n    }\n\n    let props = {\n      key: node.id,\n      src: image\n    }\n\n    return <img {...props} />\n  }\n\n  getLeafCheckbox (node) {\n    let { selectedTerms } = this.props\n    let image = 'images/checkbox-unchecked.png'\n\n    if (_.includes(selectedTerms, node.name)) {\n      image = 'images/checkbox-checked.png'\n    }\n\n    let props = {\n      key: node.id,\n      src: image\n    }\n\n    return <img {...props} />\n  }\n\n  createParentNodeLabel (node) {\n    let css = 'label-checkbox'\n    if (_.isEmpty(node.children)) css += ' leaf-node'\n\n    let children = getChildrenNodes(node)\n\n    return <div className={css}\n                onClick={this.handleParentClick.bind(this, node)}>\n      {this.getParentCheckbox(node)}\n      <div className=\"label-container\">\n        <span className=\"label\">{node.name} ({children.length})</span>\n      </div>\n    </div>\n  }\n\n  createLeafNode (node) {\n    return <div className=\"leaf-node\"\n                key={node.id}\n                onClick={this.handleLeafClick.bind(this, node)}>\n      {this.getLeafCheckbox(node)}\n      <div className=\"label-container\">\n        <span className=\"label\">{node.name}</span>\n      </div>\n    </div>\n  }\n\n  createTree (nodes = []) {\n    let tree = nodes.map((node) => {\n      let id = node.id || node.name\n\n      let css = (node.visible) ? 'show' : 'hide'\n\n      if (_.isEmpty(node.children)) {\n        return <div className={css} key={id}>\n                {this.createLeafNode(node)}\n              </div>\n      } else {\n        let { treeNodes, filterTerm } = this.props\n        let treeExpanded = false\n\n        if (!_.isEmpty(filterTerm)) {\n          let matches = _.map(getVisibleMatches(treeNodes, filterTerm), 'name')\n          treeExpanded = _.includes(matches, node.name)\n        }\n\n        if (node.name === 'all') treeExpanded = true // override for \"all\"\n\n        let props = {\n          nodeLabel: this.createParentNodeLabel(node)\n        }\n\n        if (_.isEmpty(filterTerm)) {\n          props.defaultCollapsed = !treeExpanded\n        } else {\n          // collapsed is the \"controlled\" version of defaultCollapsed\n          props.collapsed = !treeExpanded\n        }\n\n        return <div className={css} key={id}>\n          <TreeView {...props}>\n            {this.createTree(node.children)}\n          </TreeView>\n        </div>\n      }\n    }, this)\n\n    return tree\n  }\n\n  getDeselectAll () {\n    let { hideDeselectAll, selectedTerms } = this.props\n\n    if (hideDeselectAll) return\n\n    return (<a className=\"deselect-all\" onClick={this.handleDeselectAll.bind(this)}>\n      Deselect All ({selectedTerms.length})\n    </a>)\n  }\n\n  render () {\n    let { treeNodes } = this.props\n\n    return <div className=\"tree\">\n      {this.getDeselectAll()}\n      {this.createTree(treeNodes)}\n    </div>\n  }\n}\n\nclass FilterTree extends Component {\n  static propTypes = {\n    treeNodes: React.PropTypes.array.isRequired,\n    onSelectionsChange: React.PropTypes.func.isRequired,\n    onTypeaheadChange: React.PropTypes.func.isRequired,\n    selectedTerms: React.PropTypes.array.isRequired,\n    hideDeselectAll: React.PropTypes.bool,\n    includeParentNodes: React.PropTypes.bool.isRequired,\n    filterTerm: React.PropTypes.string.isRequired,\n    placeholder: React.PropTypes.string.isRequired\n  };\n\n  componentDidMount () {\n    this.originalTree = decorateTree(this.props.treeNodes)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (!treesAreEqual(this.props.treeNodes, nextProps.treeNodes) && !_.isEmpty(nextProps.treeNodes)) {\n      this.originalTree = decorateTree(_.clone(nextProps.treeNodes))\n    }\n  }\n\n  handleTypeaheadChange (event) {\n    let filterTerm = event.currentTarget.value\n    let toggled = getToggledTree(this.originalTree, filterTerm)\n    this.props.onTypeaheadChange(toggled, filterTerm)\n  }\n\n  render () {\n    let {\n      treeNodes,\n      onSelectionsChange,\n      selectedTerms,\n      hideDeselectAll,\n      includeParentNodes,\n      filterTerm,\n      placeholder\n    } = this.props\n\n    let debounced = _.debounce(this.handleTypeaheadChange.bind(this), 250)\n\n    let typeAheadHandler = function (event) {\n      // React will clear out that event, so we need to clone it the first time so that it's available to our\n      // debounced function, otherwise, the debounced method will receive null for an event object... which is bad\n      debounced(_.clone(event))\n    }\n\n    return (\n      <div className=\"filter-tree\">\n        <div className=\"input-search-container\">\n          <input type=\"search\" placeholder={placeholder} onChange={typeAheadHandler.bind(this)} />\n        </div>\n\n        <span className=\"separator\"></span>\n\n        <Tree {...this.props} />\n      </div>\n    )\n  }\n}\n\nexport default FilterTree\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/FilterTree.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"lodash\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar TreeView = _react2['default'].createClass({\n  displayName: 'TreeView',\n\n  propTypes: {\n    collapsed: _react.PropTypes.bool,\n    defaultCollapsed: _react.PropTypes.bool,\n    nodeLabel: _react.PropTypes.node.isRequired,\n    className: _react.PropTypes.string,\n    itemClassName: _react.PropTypes.string\n  },\n\n  getInitialState: function getInitialState() {\n    return { collapsed: this.props.defaultCollapsed };\n  },\n\n  handleClick: function handleClick() {\n    this.setState({ collapsed: !this.state.collapsed });\n    if (this.props.onClick) {\n      var _props;\n\n      (_props = this.props).onClick.apply(_props, arguments);\n    }\n  },\n\n  render: function render() {\n    var _props2 = this.props;\n    var _props2$collapsed = _props2.collapsed;\n    var collapsed = _props2$collapsed === undefined ? this.state.collapsed : _props2$collapsed;\n    var _props2$className = _props2.className;\n    var className = _props2$className === undefined ? '' : _props2$className;\n    var _props2$itemClassName = _props2.itemClassName;\n    var itemClassName = _props2$itemClassName === undefined ? '' : _props2$itemClassName;\n    var nodeLabel = _props2.nodeLabel;\n    var children = _props2.children;\n\n    var rest = _objectWithoutProperties(_props2, ['collapsed', 'className', 'itemClassName', 'nodeLabel', 'children']);\n\n    var arrowClassName = 'tree-view_arrow';\n    var containerClassName = 'tree-view_children';\n    if (collapsed) {\n      arrowClassName += ' tree-view_arrow-collapsed';\n      containerClassName += ' tree-view_children-collapsed';\n    }\n\n    var arrow = _react2['default'].createElement('div', _extends({}, rest, {\n      className: className + ' ' + arrowClassName,\n      onClick: this.handleClick }));\n\n    return _react2['default'].createElement(\n      'div',\n      { className: 'tree-view' },\n      _react2['default'].createElement(\n        'div',\n        { className: 'tree-view_item ' + itemClassName },\n        arrow,\n        nodeLabel\n      ),\n      _react2['default'].createElement(\n        'div',\n        { className: containerClassName },\n        children\n      )\n    );\n  }\n});\n\nexports['default'] = TreeView;\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-treeview/lib/react-treeview.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}